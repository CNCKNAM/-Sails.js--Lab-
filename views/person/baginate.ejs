<div id="app">
    <!-- the table element-->
    <section class="section">

        <div class="card" v-for="person in persons">
            <header class="card-header">
                <p class="card-header-title">
                    {{person.name}}
                </p>
            </header>
            <div class="card-content">
                <div class="content">
                    {{person.age}}
                </div>
            </div>
        </div>

    </section>

    <b-pagination :total="total" v-model="current" :range-before="rangeBefore" :range-after="rangeAfter" :order="order"
        :size="size" :simple="isSimple" :rounded="isRounded" :per-page="perPage" :icon-prev="prevIcon"
        :icon-next="nextIcon" aria-next-label="Next page" aria-previous-label="Previous page" aria-page-label="Page"
        aria-current-label="Current page" @change="fetchData()">
    </b-pagination>

    <div class="columns">
        <b-input class="column" v-model="perPage"></b-input>
        <div class="column">
            <button class="button is-warning" @click="postData()">GO!</button>
        </div>
    </div>
</div>
<script src="https://unpkg.com/vue"></script>
<!-- Full bundle -->
<script src="https://unpkg.com/buefy/dist/buefy.min.js"></script>

<!-- Individual components -->
<script src="https://unpkg.com/buefy/dist/components/table"></script>
<script src="https://unpkg.com/buefy/dist/components/input"></script>

<script>
    new Vue({
        el: '#app',
        data: {
            total: parseInt("<%= total %>"),
            persons: [],
            current: 1,
            perPage: 2,
            rangeBefore: 1,
            rangeAfter: 1,
            order: '',
            size: '',
            isSimple: false,
            isRounded: false,
            prevIcon: 'chevron-left',
            nextIcon: 'chevron-right'
        },
        /* computed: {
            isFirstPage: function () { return this.current <= 1 },
            isLastPage: function () { return this.current >= Math.ceil(this.total / this.perPage) },
        }, */
        mounted: function () {
            this.fetchData();
        },
        methods: {
            fetchData: async function () {

                var response = await fetch('/person/baginate?perPage=' + this.perPage + '&current=' + this.current);

                if (response.ok) {

                    this.persons = await response.json();
                    //this.perPage = this.perPage = Math.max(perPage, 2) || 2;;
                    //this.current = current;
                    // `this` inside methods points to the Vue instance

                } else {
                    alert(response.statusText);
                }
            },
            postData: async function () {
                var response = await fetch('https://httpbin.org/post', {
                    method: 'POST',
                    body: JSON.stringify(this.persons)
                });

                if (response.ok) {

                    var echo = await response.json();
                    alert(JSON.stringify(echo));

                } else {
                    alert(response.statusText);
                }
            }
        },
    })
</script>